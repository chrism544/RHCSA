
####################################################################################################
100 - Understand and use essential tools for handling files, directories, command-line environments, and documentation

$ cat                         [ concatenates and prints the contents of one or more files to the standard output ]
$ cd                          [ changes the current working directory. ]
$ cp                          [ copies one or more files to another location ]
$ grep                        [ grep searches for patterns in text files. ]
$ ls                          [ lists the contents of the current directory, or another directory if specified. ]
$ mv                          [ moves one or more files from one location to another. ]
$ pwd                         [ prints the full path of the current working directory to the standard output. ]
$ rm                          [ removes one or more files. ]
$ touch                       [ creates an empty file, or updates the timestamp of an existing file. ]
$ man                         [ displays the manual page for a command. The manual page contains detailed information about the command, including its syntax, options, and examples. ]
$ info                        [ Display the info page for a command ]
$ mkdir                       [ creates one or more directories ]

Input Output Redirection
	> overwrite
	< send into command
	>> append 
	<< append into command or file
	2>&1 redirect errors to stdout
	2> redirect errors
	stin = 0 
	stdout =1
	stderr =2

Use grep and regular expressions to analyze text
	grep
	egrep '(x|y)'

####################################################################################################
200 - Create simple shell scripts

| Command |		[ Description ]

#!/bin/bash		[ This is the shebang line, and it tells the system which shell interpreter to use for the script. ]
echo			[ Prints text to the standard output. ]
read			[ Reads input from the standard input. ]0
if			[ Executes a block of code if a condition is met. ]
elif			[ Executes a block of code if a condition is met, but only if a previous if statement was not met. ]
else			[ Executes a block of code if none of the previous conditions were met. ]
fi			[ Ends an if statement. ]
for			[ Executes a block of code for a specified number of times or until a condition is met. ]
in			[ Used in for loops to iterate over a list of values. ]
do			[ Starts a for loop. ]
done			[ Ends a for loop. ]
case			[ Executes a block of code depending on the value of a variable. ]
esac			[ Ends a case statement. ]
function		[ Defines a function. ]
return			[ Returns from a function. ]
exit			[ Exits the script. ]

####################################################################################################
300 - Operate running systems, including booting into different run levels, identifying processes, starting and stopping virtual machines, and controlling services

| Command |				[ Description ]

| systemctl 				[primary command for controlling systemd services. It can be used to start, stop, restart, and enable/disable services.]
| runlevel 				[displays the current runlevel, which is a system state that defines which services are running.]
| init					[used to boot the system into a specific runlevel.]
| ps 					[lists all running processes, along with their process ID (PID), user, and CPU and memory usage.]
| top 					[Display real-time system information, including CPU usage, memory usage, and process list]
| kill 					[terminates a running process.]
| virsh 				[command-line tool for managing virtual machines. It can be used to create, start, stop, and suspend virtual machines, as well as manage other aspects of virtual machine configuration.]
| service 				[deprecated command for controlling system services. It should be avoided in favor of systemctl.]


####################################################################################################
400 - Configure local storage using partitions and logical volumes

Managing Filesystem
-------- ----------

Partition Management:
 	fdisk or parted: These utilities are used to create, delete, and manage disk partitions.
        Example: fdisk /dev/sdX to create and manage partitions on a specific disk (replace "X" with the appropriate drive letter).

Create Physical Volumes:
        pvcreate: Used to initialize a physical volume on a partition or disk.
        Example: pvcreate /dev/sdX1 to create a physical volume on a specific partition.

Volume Group Management:
        vgcreate: To create a volume group.
        vgextend and vgreduce: To extend or reduce the size of a volume group.
        Example: vgcreate myvg /dev/sdX1 to create a volume group named "myvg" using the physical volume.

Logical Volume Management:
        lvcreate: To create logical volumes within a volume group.
        lvextend and lvreduce: To resize logical volumes.
        Example: lvcreate -L 10G -n mylv myvg to create a logical volume named "mylv" in the "myvg" volume group with a size of 10GB.

File System Creation:
        mkfs: To create a file system on a logical volume (e.g., mkfs.ext4, mkfs.xfs).
        Example: mkfs.ext4 /dev/myvg/mylv to create an Ext4 file system on the logical volume.

Mounting and Fstab:
        mount: To mount logical volumes to directories.
        /etc/fstab: To configure automatic mounting at system boot.

Managing network
-------- -------

View Network Configuration:
        ip addr or ifconfig: To view network interface information.
        nmcli connection show: To list NetworkManager-managed connections.

Configure Network Interfaces:
        nmcli connection add: To add a new NetworkManager connection.
        nmcli connection modify: To modify an existing NetworkManager connection.
        ifconfig or ip addr: To configure IP addresses and network settings manually.

Activate/Deactivate Network Interfaces:
        nmcli connection up: To activate a NetworkManager connection.
        nmcli connection down: To deactivate a NetworkManager connection.
        ifconfig or ip link set: To bring network interfaces up or down.

Hostname and DNS Configuration:
        hostnamectl set-hostname: To set the system's hostname.
        Edit /etc/hostname for persistent hostname changes.
        Edit /etc/hosts for manual DNS mapping.
        nmcli connection modify: To set DNS information in NetworkManager connections.

Network Troubleshooting:
        ping: To test network connectivity.
        traceroute or mtr: To trace the route to a destination.
        netstat or ss: To display network statistics.
        systemctl status NetworkManager: To check the status of NetworkManager.
        journalctl -xe: To view system logs for network-related issues.

Firewall Configuration (if relevant):
        firewall-cmd: To configure the firewall, including opening or closing ports.

DNS Configuration (if relevant):
        Edit /etc/resolv.conf to set DNS server addresses (though this may not be recommended due to NetworkManager).
        Use nmcli to configure DNS settings within NetworkManager.

####################################################################################################
600 - Deploy, configure, and maintain systems, including software installation, update, and core services:

Command	Description
yum			[ Installs, updates, and removes packages on Red Hat Enterprise Linux (RHEL) and CentOS systems. ] 
dnf			[ Installs, updates, and removes packages on Fedora systems. ] 
rpm			[ Manages RPM packages, which are the standard package format for RHEL, CentOS, and Fedora systems.
systemctl		[ Controls systemd services.
firewall-cmd		[ Configures the firewall.
setenforce		[ Sets the SELinux enforcement mode.
timedatectl		[ Configures the system clock.
hostnamectl		[ Sets the system hostname.
chronyc			[ Manages the chronyd time synchronization service.
ntpdate	Sets the system clock using the Network Time Protocol (NTP).
swapon	Activates a swap partition.
swapoff	Deactivates a swap partition.
fdisk	Partitions disks.
mkfs	Creates a file system on a disk or partition.
mount	Mounts a file system.
umount	Unmounts a file system.

Here are some examples of how to use these commands:

    To install the Apache web server:

yum install httpd

    To update all of the packages on the system:

yum update

    To remove the MySQL database server:

yum remove mysql

    To start the SSH daemon:

systemctl start sshd

    To stop the firewall:

systemctl stop firewalld

    To set the SELinux enforcement mode to permissive:

setenforce 0

    To set the system hostname to "myhost":

hostnamectl set-hostname myhost

    To start the chronyd time synchronization service:

systemctl start chronyd

    To set the system clock using NTP:

ntpdate ntp.example.com

    To activate the swap partition on the device /dev/sdb1:

swapon /dev/sdb1

    To deactivate the swap partition on the device /dev/sdb1:

swapoff /dev/sdb1

    To partition the disk /dev/sda:

fdisk /dev/sda [ To create a file system of type ext4 on the partition /dev/sda1: ]

mkfs.ext4 /dev/sda1

    To mount the partition /dev/sda1 to the directory /mnt:

mount /dev/sda1 /mnt

    To unmount the partition /dev/sda1:

umount /mnt

####################################################################################################
500 - Create and configure file systems and file system attributes, such as permissions, encryption, access control lists, and network file systems



####################################################################################################
600 - Deploy, configure, and maintain systems, including software installation, update, and core services

    yum - install, update, and remove packages
    dnf - install, update, and remove packages
    systemctl - control systemd services
The nmtui command is a text-based user interface (TUI) for the NetworkManager network management service. It allows you to manage your network connections, including creating and editing connections, viewing connection status, and troubleshooting network problems.

The nmtui command is a valuable tool for RHCSA candidates, as it allows you to manage your network connections without having to learn complex command-line commands.

Here are some examples of how to use the nmtui command:

    To list all of your network connections:

nmtui

    To edit a network connection:

nmtui edit <connection-name>

    To create a new network connection:

nmtui add

    To activate a network connection:

nmtui connect <connection-name>

    To disable a network connection:

nmtui disconnect <connection-name>

####################################################################################################
700 - Manage users and groups

    useradd 								[ creates a new user account, and you can specify various options like the user's home directory and shell. ]
	useradd		{options} {username} 	
	useradd 	-u 2020 	-s /bin/bash 	-e 2020-01-01 	-c "Admin user name"
	Creates user	Usergroup	Shell		Expire_date	Comment
    userdel  								[ Removes a user account from the system, along with their home directory and mailbox, if specified. ]
    groupadd 								[ This command is used to create a new group on the system. ]
	groupadd 	{option}	{group}				[ The next example shows hot to create groups with option -g, --gid in order to assign numerical value/id to groups. In case we don not run option -g,--gid then the system is going to assign a random group ID ]
	groupadd	-g 2020 	network
	groupadd	--gid 1919	linux
	groupadd			database
    groupdel 								[ Removes a group from the system. Be cautious, as this also removes all group memberships. ]
	userdel 	{options}	{username}
	userdel		-r 		jerry				[ We run the option -r, --remove in ord to delete thge username account and the related files of the username ]
    usermod 								[ You can use this command to change user attributes like the user's login shell, home directory, or group membership. ]
									[ examples of usermod | -a,--append | -G, --groups | -L, --lock | -U, --unlock | -c, --comment ]
	usermod		{options}	{groupname}	{username}	[ To show how to add members to groups ]
	usermod  	{options}	{username}			[ To modify user attributes. ]
	usermod		-a -G		database	jerry		[ Adds jerry to the group databae ]
    passwd 								[ Description: Allows users (including the superuser) to change their passwords or can be used by the superuser to change another user's password. ]
    groupmod								[ It allows you to change group attributes, like the group name or group ID. ]
    gpasswd								[ It is used to administer the /etc/group and /etc/gshadow files, which store group information, including passwords. ]
    newgrp 								[ This command allows a user to temporarily switch to a different group without logging out and logging back in. ]
    id 									[ Shows information about a user, including their user and group IDs and group memberships.. ] 
    chage:								[ Used to set password expiration and aging properties for a user. ]
	chage		{options} 	{username}
	chage		-l	 	mary				[ To display infomation about changing user password expiry information ]
	chage		-d 0		{username}			[ To force users to change their password on the next log on ]
    su: 								[ Allows you to switch to another user account, including the root superuser. ]
    sudo: 								[ Enables authorized users to execute commands as another user, usually the root user. ]
    ls -l /home								[ Gets list of users ]
    cat /etc/passwd							[ To list and show all users and details of users. 
    cat /etc/group							[ To show information about groups and details of groups ]
	
####################################################################################################
800 - Manage security, including basic firewall and SELinux configuration

    firewall-cmd - configure the firewall
    setenforce - set the SELinux enforcement mode

####################################################################################################
900 - Perform basic container management

    podman - manage containers and images
    skopeo - inspect and manipulate container images

Command	Description
yum	Installs, updates, and removes packages on Red Hat Enterprise Linux (RHEL) and CentOS systems.
dnf	Installs, updates, and removes packages on Fedora systems.
rpm	Manages RPM packages, which are the standard package format for RHEL, CentOS, and Fedora systems.
systemctl	Controls systemd services.
firewall-cmd	Configures the firewall.
setenforce	Sets the SELinux enforcement mode.
timedatectl	Configures the system clock.
hostnamectl	Sets the system hostname.
chronyc	Manages the chronyd time synchronization service.
ntpdate	Sets the system clock using the Network Time Protocol (NTP).
swapon	Activates a swap partition.
swapoff	Deactivates a swap partition.
fdisk	Partitions disks.
mkfs	Creates a file system on a disk or partition.
mount	Mounts a file system.
umount	Unmounts a file system.

Here are some examples of how to use these commands:

    To install the Apache web server:

yum install httpd

    To update all of the packages on the system:

yum update

    To remove the MySQL database server:

yum remove mysql

    To start the SSH daemon:

systemctl start sshd

    To stop the firewall:

systemctl stop firewalld

    To set the SELinux enforcement mode to permissive:

setenforce 0

    To set the system hostname to "myhost":

hostnamectl set-hostname myhost

    To start the chronyd time synchronization service:

systemctl start chronyd

    To set the system clock using NTP:

ntpdate ntp.example.com

    To activate the swap partition on the device /dev/sdb1:

swapon /dev/sdb1

    To deactivate the swap partition on the device /dev/sdb1:

swapoff /dev/sdb1

    To partition the disk /dev/sda:

fdisk /dev/sda

    To create a file system of type ext4 on the partition /dev/sda1:

mkfs.ext4 /dev/sda1

    To mount the partition /dev/sda1 to the directory /mnt:

mount /dev/sda1 /mnt

    To unmount the partition /dev/sda1:

umount /mnt

These are just a few examples of the commands that are required for the RHSCA - 600  Deploy, configure, and maintain systems, including software installation, update, and core services. For a more comprehensive list of commands, please refer to the RHCSA exam objectives.

Remaining:





